---

- name: Install Java
  include_role:
    name: java

- name: Check installation
  shell: 'test -f {{ zookeeper_path }}/bin/zkServer.sh && echo "yes" || echo "no"'
  changed_when: false
  register: installed_status

- name: Get installed version
  shell: readlink -f {{ zookeeper_path }} | sed -nr 's/.*zookeeper\-(.*)/\1/p'
  when: installed_status.stdout == "yes"
  changed_when: false
  register: installed_version

- name: Set installed variable
  set_fact: is_installed='{{ installed_status.stdout == "yes" and installed_version.stdout == zookeeper_version }}'

- name: Set dependencies License
  shell: echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections
  changed_when: false

- name: Install Dependencies
  apt: pkg={{ item }} state=latest
  with_items:
    - make

- name: Create User
  user: name={{ zookeeper_user }} system=yes shell=/bin/bash

- name: Download
  get_url: url="{{ zookeeper_url }}/{{ zookeeper_filename }}/{{ zookeeper_filename }}{{ zookeeper_filename_extension }}" dest="/tmp/{{ zookeeper_filename }}{{ zookeeper_filename_extension }}"
  when: not is_installed

- name: Unarchive
  unarchive: >
    src=/tmp/{{ zookeeper_filename }}{{ zookeeper_filename_extension }}
    dest=/opt
    copy=no
  when: not is_installed

- name: Apply permissions into unarchived file
  file: >
    path=/opt/{{ zookeeper_filename }}
    owner={{ zookeeper_user }}
    recurse=yes
  changed_when: false

- name: Link folder
  file: >
    src=/opt/{{ zookeeper_filename }}
    dest={{ zookeeper_path }}
    owner={{ zookeeper_user }}
    state=link

- name: Create /var folders
  file: path={{ item }} state=directory
  with_items:
    - "{{ zookeeper_var_path }}"
    - "{{ zookeeper_var_path_data }}"
    - "/var/log/zookeeper"

- name: Set config file parameters
  template: src=zoo.conf.j2 dest={{ zookeeper_var_path }}/zoo.cfg

- name: Set myid file
  template: src=myid.j2 dest={{ zookeeper_var_path_data }}/myid


- name: Set path into script file
  lineinfile: >
    dest={{ zookeeper_path }}/bin/zkServer.sh
    regexp="^ZOOBIN="
    line='ZOOBIN="{{ zookeeper_path }}/bin"'

- name: Set config path into script file
  lineinfile: >
    dest="{{ zookeeper_path }}/bin/zkServer.sh"
    insertafter="^ZOOBINDIR=.*"
    line='ZOOCFGDIR="{{ zookeeper_var_path }}"'

- name: Apply permission into zookeeper path
  file: >
    path={{ item }}
    owner={{ zookeeper_user }}
    group={{ zookeeper_user }}
    state=directory
    recurse=yes
  with_items:
    - "{{ zookeeper_var_path }}"
    - "/var/log/zookeeper"
  changed_when: false

- name: Set start script
  template: >
    src=init.tpl
    dest=/etc/init.d/zookeeper
    owner=root
    group=root
    mode=0744

- name: Register service
  service: name=zookeeper enabled=yes

- name: Flush handlers to apply config changes
  meta: flush_handlers

- name: Ensure ZooKeeper is started
  service: name=zookeeper state=started

- name: Remove tmp files
  file: path=/tmp/{{ zookeeper_filename }}{{ zookeeper_filename_extension }} state=absent

- name: Check library
  shell: 'test -f /usr/local/include/zookeeper/zookeeper.h && echo "yes" || echo "no"'
  changed_when: false
  register: library_status

- name: Install GCC
  apt:
    name: build-essential
    state: latest
  when: library_status.stdout == "no"

- name: Configure library
  command: ./configure chdir={{ zookeeper_path }}/src/c
  when: library_status.stdout == "no"

- name: Build library
  command: make chdir={{ zookeeper_path }}/src/c
  when: library_status.stdout == "no"

- name: Install library
  command: make install chdir={{ zookeeper_path }}/src/c
  when: library_status.stdout == "no"
